.. Auto-generated by Bear v0.1.9

.. _setup:

=====
Setup
=====

reclab depends on several Python packages:

* implicit>=0.3.6
* nmslib
* annoy
* scipy
* scikit-learn>=0.18
* numpy>=1.12
* cython>=0.23

To install, simply use the ``setup.py`` script:

.. code-block:: bash

    $ python setup.py install

If you wish to setup the package for further development and testing, use the
``develop`` keyword rather than ``install``:

.. code-block:: bash

    $ python setup.py develop

|

.. _testing:

Testing
-------

The following are some guidelines for creating and running unit test cases.

|

Creating test cases
~~~~~~~~~~~~~~~~~~~

reclab uses ``nose`` or ``pytest`` to unit test. The pattern for these frameworks
is that each submodules should contain a "tests" directory and individual scripts prefixed with
"test" for each script in the submodule::


    some_submodule/
        |
        |_ tests/
            |_ test_script_a.py
            |_ ...
        |_ __init__.py
        |_ script_a.py
        |_ ...


Each unit test function within the test script should be prefixed with "test":

.. code-block:: python

    # test_script_a.py
    def test_some_function_in_script_a():
        assert something()

**Note** that no ``__main__`` section is required for pytest or nose. The frameworks
themselves will automatically find testing functions and evaluate them. This means some
care has to be taken when naming your functions. Any function that contains the word "test"
is liable to be evaluated by the testing framework. To avoid this, use this trick:

.. code-block:: python

    def some_benign_function_that_contains_word_test(**kwargs):
        return do_something(**kwargs)

    # Avoid conflict with nose/pytest:
    some_benign_function_that_contains_word_test.__test__ = False

Running unit tests
~~~~~~~~~~~~~~~~~~

Running the unit tests is exceedingly simple.
After you've built the package in ``develop`` mode, you can run the unit tests via pytest:

.. code-block:: bash

    $ pytest

And with coverage, if you have the ``coverage`` and ``pytest-cov`` package:

.. code-block:: bash

    $ pytest --cov reclab
